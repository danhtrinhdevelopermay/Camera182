name: Build Android APK (Fixed)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.6'
        channel: 'stable'
        
    - name: Fix Android Embedding v1 to v2
      run: |
        cd ios_camera_flutter_app
        
        echo "=== Fixing Android Embedding v1 to v2 ==="
        
        # Remove old MainActivity structure 
        rm -rf android/app/src/main/kotlin/com/iosCamera
        
        # Create proper package structure
        mkdir -p android/app/src/main/kotlin/com/example/ios_camera_flutter_app
        
        # Create MainActivity with proper embedding v2
        cat > android/app/src/main/kotlin/com/example/ios_camera_flutter_app/MainActivity.kt << 'EOF'
        package com.example.ios_camera_flutter_app
        
        import io.flutter.embedding.android.FlutterActivity
        
        class MainActivity : FlutterActivity()
        EOF
        
        # Update AndroidManifest.xml to use correct package
        sed -i 's/android:name="\.MainActivity"/android:name="com.example.ios_camera_flutter_app.MainActivity"/g' android/app/src/main/AndroidManifest.xml
        
        # Update build.gradle.kts for correct package
        sed -i 's/namespace = "com\.iosCamera\.temp_android_project"/namespace = "com.example.ios_camera_flutter_app"/g' android/app/build.gradle.kts
        sed -i 's/applicationId = "com\.iosCamera\.temp_android_project"/applicationId = "com.example.ios_camera_flutter_app"/g' android/app/build.gradle.kts
        
        echo "=== Package structure after fix ==="
        find android/app/src/main/kotlin -name "*.kt" -exec echo "File: {}" \; -exec cat {} \;
        
        echo "=== AndroidManifest.xml ==="
        cat android/app/src/main/AndroidManifest.xml
        
    - name: Flutter Clean and Get Dependencies
      run: |
        cd ios_camera_flutter_app
        flutter clean
        flutter pub get
        
    - name: Flutter Doctor
      run: |
        cd ios_camera_flutter_app  
        flutter doctor -v
        
    - name: Build APK
      run: |
        cd ios_camera_flutter_app
        echo "=== Building APK ==="
        flutter build apk --release --verbose
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: app-release-apk
        path: ios_camera_flutter_app/build/app/outputs/flutter-apk/app-release.apk
        
    - name: Show Build Output
      if: always()
      run: |
        cd ios_camera_flutter_app
        echo "=== Build directory contents ==="
        ls -la build/app/outputs/ || echo "Build directory not found"
        find build -name "*.apk" 2>/dev/null || echo "No APK files found"