name: Build APK - Final Working Version

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Java 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: Setup Flutter 3.19.6
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.6'
        channel: 'stable'
        
    - name: Clean Build Environment
      run: |
        rm -rf ~/.gradle
        cd ios_camera_flutter_app
        rm -rf android/build android/.gradle android/app/build build .dart_tool
        
    - name: Apply Android Configuration Fix
      run: |
        cd ios_camera_flutter_app
        chmod +x ../fix-android-embedding.sh
        ../fix-android-embedding.sh
        
    - name: Verify Configuration
      run: |
        cd ios_camera_flutter_app
        echo "Java Version: $(java -version 2>&1 | head -1)"
        echo "JAVA_HOME: $JAVA_HOME"
        echo "Buildscript check:"
        head -6 android/build.gradle
        echo "Plugin check:"
        grep -A 2 "apply plugin" android/app/build.gradle
        
    - name: Flutter Dependencies
      run: |
        cd ios_camera_flutter_app
        flutter clean
        flutter pub get
        
    - name: Build APK
      run: |
        cd ios_camera_flutter_app
        flutter build apk --release
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: camera-app-release
        path: ios_camera_flutter_app/build/app/outputs/flutter-apk/app-release.apk
        retention-days: 7
        
    - name: Build Status
      if: always()
      run: |
        cd ios_camera_flutter_app
        if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
          echo "✅ APK Build SUCCESS!"
          echo "Size: $(du -h build/app/outputs/flutter-apk/app-release.apk | cut -f1)"
        else
          echo "❌ APK Build FAILED"
          find build -name "*.apk" 2>/dev/null || echo "No APK found"
        fi